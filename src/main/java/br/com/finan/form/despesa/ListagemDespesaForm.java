package br.com.finan.form.despesa;

import br.com.finan.dao.CriteriaBuilder;
import br.com.finan.dto.DespesaDTO;
import br.com.finan.entidade.Conta;
import br.com.finan.entidade.enumerator.Mes;
import br.com.finan.entidade.enumerator.TipoConta;
import br.com.finan.form.principal.ListagemForm;
import br.com.finan.util.HibernateUtil;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import javax.swing.JTable;
import org.hibernate.criterion.Order;
import org.hibernate.sql.JoinType;

/**
 *
 * @author Wesley Luiz
 */
public class ListagemDespesaForm extends ListagemForm<DespesaDTO> {

    private static final String MASK_YEAR = "yyyy";

    private List<Mes> meses;
    private Mes mesSelecionado;
    private String ano;

    /**
     * Creates new form ListagemDespesa
     */
    public ListagemDespesaForm() {
        meses = Arrays.asList(Mes.values());
        mesSelecionado = Mes.JANEIRO;
        ano = new SimpleDateFormat(MASK_YEAR).format(new Date());
        initComponents();
        iniciarDados();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jScrollPane1 = new javax.swing.JScrollPane();
        tblDespesa = new javax.swing.JTable();
        btnSalvar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnMesAnterior = new javax.swing.JButton();
        btnMesProximo = new javax.swing.JButton();
        txtMes = new javax.swing.JComboBox();
        txtAno = new javax.swing.JTextField();
        btnUltimo = new javax.swing.JButton();
        btnProximo = new javax.swing.JButton();
        btnAnterior = new javax.swing.JButton();
        btnPrimeiro = new javax.swing.JButton();
        lbPaginacao = new javax.swing.JLabel();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);

        tblDespesa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Descrição", "Categoria", "Vencimento", "Valor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDespesa);

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnMesAnterior.setText("<");
        btnMesAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMesAnteriorActionPerformed(evt);
            }
        });

        btnMesProximo.setText(">");
        btnMesProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMesProximoActionPerformed(evt);
            }
        });

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${meses}");
        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, txtMes);
        bindingGroup.addBinding(jComboBoxBinding);
        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${mesSelecionado}"), txtMes, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        txtAno.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${ano}"), txtAno, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        btnUltimo.setText(">>");
        btnUltimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUltimoActionPerformed(evt);
            }
        });

        btnProximo.setText(">");
        btnProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProximoActionPerformed(evt);
            }
        });

        btnAnterior.setText("<");
        btnAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnteriorActionPerformed(evt);
            }
        });

        btnPrimeiro.setText("<<");
        btnPrimeiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrimeiroActionPerformed(evt);
            }
        });

        lbPaginacao.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbPaginacao.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 690, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnMesAnterior)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMes, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMesProximo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAno, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSalvar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbPaginacao, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPrimeiro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAnterior)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnProximo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUltimo)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMesAnterior)
                    .addComponent(btnMesProximo)
                    .addComponent(txtMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar)
                    .addComponent(btnExcluir)
                    .addComponent(btnUltimo)
                    .addComponent(btnProximo)
                    .addComponent(btnAnterior)
                    .addComponent(btnPrimeiro)
                    .addComponent(lbPaginacao))
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        for (DespesaDTO dto : getDados()) {
            if (dto.isSelecionado()) {
                HibernateUtil.inativar(dto.getId(), Conta.class.getSimpleName());
            }
        }
        tblDespesa.removeAll();
        buscarDados(1);
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnMesAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMesAnteriorActionPerformed
        int mes = getMesSelecionado().getReferencia() - 1;

        if (mes < 1) {
            mes = 12;
            final Integer a = Integer.valueOf(ano) - 1;
            txtAno.setText(a.toString());
        }

        txtMes.setSelectedItem(Mes.getMesPorReferencia(mes));
        buscarDados(1);
    }//GEN-LAST:event_btnMesAnteriorActionPerformed

    private void btnMesProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMesProximoActionPerformed
        int mes = getMesSelecionado().getReferencia() + 1;

        if (mes > 12) {
            mes = 1;
            final Integer a = Integer.valueOf(ano) + 1;
            txtAno.setText(a.toString());
        }

        txtMes.setSelectedItem(Mes.getMesPorReferencia(mes));
        buscarDados(1);
    }//GEN-LAST:event_btnMesProximoActionPerformed

    private void btnPrimeiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrimeiroActionPerformed
        irPrimeiraPagina();
    }//GEN-LAST:event_btnPrimeiroActionPerformed

    private void btnAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnteriorActionPerformed
        irPaginaAnterior();
    }//GEN-LAST:event_btnAnteriorActionPerformed

    private void btnProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProximoActionPerformed
        irProximaPagina();
    }//GEN-LAST:event_btnProximoActionPerformed

    private void btnUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUltimoActionPerformed
        irUltimaPagina();
    }//GEN-LAST:event_btnUltimoActionPerformed

    @Override
    protected void validarBtnPaginacao() {
        btnPrimeiro.setEnabled(getPagina() != 1);
        btnAnterior.setEnabled(btnPrimeiro.isEnabled());
        btnProximo.setEnabled(!isUltimaPagina());
        btnUltimo.setEnabled(!isUltimaPagina());
        lbPaginacao.setText("Exibindo " + getPagina() * MAX_REGISTROS + " de " + getQntRegistros());
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnterior;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnMesAnterior;
    private javax.swing.JButton btnMesProximo;
    private javax.swing.JButton btnPrimeiro;
    private javax.swing.JButton btnProximo;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnUltimo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbPaginacao;
    private javax.swing.JTable tblDespesa;
    private javax.swing.JTextField txtAno;
    private javax.swing.JComboBox txtMes;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    @Override
    protected JTable getTable() {
        return tblDespesa;
    }

    @Override
    protected CriteriaBuilder getBuilderListagem() {
        return HibernateUtil.getCriteriaBuilder(Conta.class)
                .eqStatusAtivo()
                .eq("tipo", TipoConta.DESPESA)
                .sqlRestrictions("MONTH(dataVencimento) = " + mesSelecionado.getReferencia())
                .sqlRestrictions("YEAR(dataVencimento) = " + getAno())
                .addAliases("categoria", "categoria", JoinType.LEFT_OUTER_JOIN)
                .addProjection("id", "id")
                .addProjection("descricao", "descricao")
                .addProjection("valor", "valor")
                .addProjection("dataVencimento", "vencimento")
                .addProjection("parcela", "parcela")
                .addProjection("totalParcelas", "totalParcela")
                .addProjection("categoria.nome", "categoria")
                .addAliasToBean(DespesaDTO.class).close()
                .addOrdenacao(Order.asc("dataVencimento"));
    }

    @Override
    protected CriteriaBuilder getBuilderQntRegistros() {
        return HibernateUtil.getCriteriaBuilder(Conta.class)
                .eqStatusAtivo()
                .eq("tipo", TipoConta.DESPESA)
                .sqlRestrictions("MONTH(dataVencimento) = " + mesSelecionado.getReferencia())
                .sqlRestrictions("YEAR(dataVencimento) = " + getAno());
    }

    public Mes getMesSelecionado() {
        return mesSelecionado;
    }

    public void setMesSelecionado(Mes mesSelecionado) {
        this.mesSelecionado = mesSelecionado;
    }

    public List<Mes> getMeses() {
        return meses;
    }

    public void setMeses(List<Mes> meses) {
        this.meses = meses;
    }

    public String getAno() {
        return ano;
    }

    public void setAno(String ano) {
        this.ano = ano;
    }

}
